<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pytap.project.dao.TaskMapper">
  <resultMap id="BaseResultMap" type="com.pytap.project.entity.Task">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="executor" jdbcType="BIGINT" property="executor" />
    <result column="initiator" jdbcType="BIGINT" property="initiator" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="starting_time" jdbcType="TIMESTAMP" property="startingTime" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="priority" jdbcType="SMALLINT" property="priority" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pytap.project.entity.Task">
    <result column="explanation" jdbcType="LONGVARCHAR" property="explanation" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, executor, initiator, name, type, starting_time, deadline, status, 
    priority, create_time
  </sql>
  <sql id="Blob_Column_List">
    explanation, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.pytap.project.entity.TaskExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.pytap.project.entity.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pytap.project.entity.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pytap.project.entity.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task (project_id, executor, initiator, 
      name, type, starting_time, 
      deadline, status, priority, 
      create_time, explanation, content
      )
    values (#{projectId,jdbcType=BIGINT}, #{executor,jdbcType=BIGINT}, #{initiator,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{startingTime,jdbcType=TIMESTAMP}, 
      #{deadline,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{priority,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{explanation,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pytap.project.entity.Task">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="executor != null">
        executor,
      </if>
      <if test="initiator != null">
        initiator,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startingTime != null">
        starting_time,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="explanation != null">
        explanation,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="executor != null">
        #{executor,jdbcType=BIGINT},
      </if>
      <if test="initiator != null">
        #{initiator,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="startingTime != null">
        #{startingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="explanation != null">
        #{explanation,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pytap.project.entity.TaskExample" resultType="java.lang.Integer">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.executor != null">
        executor = #{record.executor,jdbcType=BIGINT},
      </if>
      <if test="record.initiator != null">
        initiator = #{record.initiator,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.startingTime != null">
        starting_time = #{record.startingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.explanation != null">
        explanation = #{record.explanation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update task
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      executor = #{record.executor,jdbcType=BIGINT},
      initiator = #{record.initiator,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      starting_time = #{record.startingTime,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      priority = #{record.priority,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      explanation = #{record.explanation,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      executor = #{record.executor,jdbcType=BIGINT},
      initiator = #{record.initiator,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      starting_time = #{record.startingTime,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      priority = #{record.priority,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pytap.project.entity.Task">
    update task
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="executor != null">
        executor = #{executor,jdbcType=BIGINT},
      </if>
      <if test="initiator != null">
        initiator = #{initiator,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="startingTime != null">
        starting_time = #{startingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="explanation != null">
        explanation = #{explanation,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pytap.project.entity.Task">
    update task
    set project_id = #{projectId,jdbcType=BIGINT},
      executor = #{executor,jdbcType=BIGINT},
      initiator = #{initiator,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      starting_time = #{startingTime,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      priority = #{priority,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      explanation = #{explanation,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pytap.project.entity.Task">
    update task
    set project_id = #{projectId,jdbcType=BIGINT},
      executor = #{executor,jdbcType=BIGINT},
      initiator = #{initiator,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      starting_time = #{startingTime,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      priority = #{priority,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>