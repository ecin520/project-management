<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pytap.project.dao.UserDao">

    <insert id="insertUser" parameterType="com.pytap.project.entity.User">
        INSERT INTO user (
            username,
            password,
            avatar,
            email,
            nickname,
            note,
            create_time,
            login_time,
            status)
        VALUES(
            #{username},
            #{password},
            #{avatar},
            #{email},
            #{nickname},
            #{note},
            #{createTime},
            #{loginTime},
            #{status})
    </insert>
    <update id="updateByUserId" parameterType="com.pytap.project.entity.User">
        UPDATE user SET
        <trim suffixOverrides=",">
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="note != null">
                note = #{note},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </trim>
        WHERE id = #{id}
    </update>
    <delete id="deleteByUserId" parameterType="long">
        DELETE FROM user WHERE id = #{id}
    </delete>
    <select id="getByUserId" resultType="com.pytap.project.entity.User">
        SELECT id,
        username,
        password,
        avatar,
        email,
        nickname,
        note,
        create_time,
        login_time,
        status FROM user WHERE id = #{id} LIMIT 1
    </select>
    <select id="getByUsername" resultType="com.pytap.project.entity.User">
        SELECT id,
        username,
        password,
        avatar,
        email,
        nickname,
        note,
        create_time,
        login_time,
        status FROM user WHERE username = #{username} LIMIT 1
    </select>
    <select id="listAllUsers" resultType="com.pytap.project.entity.User">
        SELECT id,
        username,
        password,
        avatar,
        email,
        nickname,
        note,
        create_time,
        login_time,
        status FROM user
    </select>
    <select id="countUser" resultType="java.lang.Integer">
        SELECT count(*) FROM user
    </select>
</mapper>